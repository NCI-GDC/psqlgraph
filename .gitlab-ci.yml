---
stages:
  - .pre
  - test
  - build
  - .trigger

include:
  - project: nci-gdc/gitlab-templates
    ref: 0.4.0
    file:
      - templates/global/full.yaml
      - templates/python/full.yaml
      - templates/common/python.yaml

tox:
  parallel:
    matrix:
      - BUILD_PY_VERSION:
          - python3.7
          - python3.8
          - python3.9
          - python3.10
          - python3.11
  services:
    - name: docker.osdc.io/ncigdc/ci-postgres-13:${BASE_CONTAINER_VERSION}
      alias: postgres
  variables:
    BASE_CONTAINER_VERSION: 2.3.1
    # these are for postgres docker
    POSTGRES_DB: automated_test
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
    POSTGRES_HOST_AUTH_METHOD: trust
    PG_HOST: postgres
  script:
    - tox -r -e py


release:
  variables:
    RELEASE_PY_VERSION: python3.7
    GIT_DEPTH: 0
  after_script:
    - pip install "setuptools_scm>=6.2,<8" "setuptools-git-versioning<2"
    - python -m setuptools_git_versioning | tee VERSION.txt
  artifacts:
    paths:
      - VERSION.txt
    expire_in: 1 week

trigger:
  stage: .trigger
  dependencies:
    - release
  parallel:
    matrix:
      - TRIGGERED_REPO:
          - 29        # inspector
          - 7         # gdcapi
          - 122       # sheepdog
          - 79        # esbuild
          - 30        # graphmanager
          - 76        # gdcadmin
  script:
    - apk add --no-cache curl
    - VERSION=$(cat VERSION.txt)
    - echo $VERSION
    - >
      curl --fail --request POST
      --form token=$CI_JOB_TOKEN
      --form ref=${CI_TRIGGERED_BRANCH:=develop}
      --form variables[CI_TRIGGER_VERSION]=$VERSION
      --form variables[CI_TRIGGER_REPO]=$CI_PROJECT_NAME
      "https://gitlab.datacommons.io/api/v4/projects/$TRIGGERED_REPO/trigger/pipeline"
  rules:
    - when: manual
