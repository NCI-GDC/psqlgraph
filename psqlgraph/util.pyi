from typing import Any, Callable, Dict, List, Mapping, Optional, TypeVar

DEFAULT_RETRIES: int

KT = TypeVar("KT", bound=str)
VT = TypeVar("VT", str, bool, int, float, None, List[str])

def validate(
    f: Callable[..., Any], value: VT, enum: Optional[List[str]] = ...
) -> None: ...
def pg_property(*pg_args: Any, **pg_kwargs: Any) -> Callable[..., Any]: ...
def sanitize(properties: Mapping[KT, VT]) -> Dict[KT, VT]: ...
def default_backoff(retries: int, max_retries: int) -> None: ...
def retryable(func: Callable[[Any], Any]) -> Callable[[Any], Any]: ...
